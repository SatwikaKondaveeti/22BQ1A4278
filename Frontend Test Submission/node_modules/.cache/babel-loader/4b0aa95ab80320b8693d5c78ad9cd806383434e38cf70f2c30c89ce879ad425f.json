{"ast":null,"code":"class Logger {\n  constructor() {\n    this.logs = [];\n    this.logLevels = {\n      ERROR: 0,\n      WARN: 1,\n      INFO: 2,\n      DEBUG: 3\n    };\n    this.currentLevel = this.logLevels.INFO;\n  }\n  setLogLevel(level) {\n    if (this.logLevels[level] !== undefined) {\n      this.currentLevel = this.logLevels[level];\n    }\n  }\n  formatMessage(level, message, data = null) {\n    const timestamp = new Date().toISOString();\n    const logEntry = {\n      timestamp,\n      level,\n      message,\n      data,\n      component: this.getCallerInfo()\n    };\n    return logEntry;\n  }\n  getCallerInfo() {\n    const stack = new Error().stack;\n    const lines = stack.split('\\n');\n    // Skip the first 3 lines (Error, Logger method, calling method)\n    const callerLine = lines[3] || '';\n    const match = callerLine.match(/at\\s+(.+?)\\s+\\((.+?):(\\d+):(\\d+)\\)/);\n    if (match) {\n      return {\n        function: match[1],\n        file: match[2].split('/').pop(),\n        line: match[3],\n        column: match[4]\n      };\n    }\n    return {\n      function: 'unknown',\n      file: 'unknown',\n      line: 'unknown',\n      column: 'unknown'\n    };\n  }\n  log(level, message, data = null) {\n    if (this.logLevels[level] <= this.currentLevel) {\n      const logEntry = this.formatMessage(level, message, data);\n      this.logs.push(logEntry);\n\n      // Console output for development\n      const consoleMessage = `[${level}] ${message}`;\n      switch (level) {\n        case 'ERROR':\n          console.error(consoleMessage, data);\n          break;\n        case 'WARN':\n          console.warn(consoleMessage, data);\n          break;\n        case 'INFO':\n          console.info(consoleMessage, data);\n          break;\n        case 'DEBUG':\n          console.debug(consoleMessage, data);\n          break;\n        default:\n          console.log(consoleMessage, data);\n      }\n    }\n  }\n  error(message, data = null) {\n    this.log('ERROR', message, data);\n  }\n  warn(message, data = null) {\n    this.log('WARN', message, data);\n  }\n  info(message, data = null) {\n    this.log('INFO', message, data);\n  }\n  debug(message, data = null) {\n    this.log('DEBUG', message, data);\n  }\n  getLogs(level = null, limit = null) {\n    let filteredLogs = this.logs;\n    if (level) {\n      filteredLogs = this.logs.filter(log => log.level === level);\n    }\n    if (limit) {\n      filteredLogs = filteredLogs.slice(-limit);\n    }\n    return filteredLogs;\n  }\n  clearLogs() {\n    this.logs = [];\n  }\n  exportLogs() {\n    return JSON.stringify(this.logs, null, 2);\n  }\n\n  // Performance logging\n  time(label) {\n    console.time(label);\n    this.info(`Timer started: ${label}`);\n  }\n  timeEnd(label) {\n    console.timeEnd(label);\n    this.info(`Timer ended: ${label}`);\n  }\n\n  // User action logging\n  logUserAction(action, details = {}) {\n    this.info(`User Action: ${action}`, {\n      action,\n      details,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent\n    });\n  }\n\n  // API call logging\n  logApiCall(method, url, status, responseTime = null) {\n    this.info(`API Call: ${method} ${url}`, {\n      method,\n      url,\n      status,\n      responseTime,\n      timestamp: new Date().toISOString()\n    });\n  }\n\n  // URL shortening specific logging\n  logUrlShortened(originalUrl, shortCode, validityMinutes) {\n    this.info(`URL Shortened`, {\n      originalUrl,\n      shortCode,\n      validityMinutes,\n      timestamp: new Date().toISOString()\n    });\n  }\n  logUrlAccessed(shortCode, originalUrl, success) {\n    this.info(`URL Accessed`, {\n      shortCode,\n      originalUrl,\n      success,\n      timestamp: new Date().toISOString()\n    });\n  }\n  logUrlExpired(shortCode, originalUrl) {\n    this.warn(`URL Expired`, {\n      shortCode,\n      originalUrl,\n      timestamp: new Date().toISOString()\n    });\n  }\n}\n\n// Create and export a singleton instance\nconst logger = new Logger();\nexport default logger;","map":{"version":3,"names":["Logger","constructor","logs","logLevels","ERROR","WARN","INFO","DEBUG","currentLevel","setLogLevel","level","undefined","formatMessage","message","data","timestamp","Date","toISOString","logEntry","component","getCallerInfo","stack","Error","lines","split","callerLine","match","function","file","pop","line","column","log","push","consoleMessage","console","error","warn","info","debug","getLogs","limit","filteredLogs","filter","slice","clearLogs","exportLogs","JSON","stringify","time","label","timeEnd","logUserAction","action","details","userAgent","navigator","logApiCall","method","url","status","responseTime","logUrlShortened","originalUrl","shortCode","validityMinutes","logUrlAccessed","success","logUrlExpired","logger"],"sources":["C:/Users/satwi/22BQ1A4278/Frontend Test Submission/src/logger.js"],"sourcesContent":["class Logger {\r\n    constructor() {\r\n        this.logs = [];\r\n        this.logLevels = {\r\n            ERROR: 0,\r\n            WARN: 1,\r\n            INFO: 2,\r\n            DEBUG: 3\r\n        };\r\n        this.currentLevel = this.logLevels.INFO;\r\n    }\r\n\r\n    setLogLevel(level) {\r\n        if (this.logLevels[level] !== undefined) {\r\n            this.currentLevel = this.logLevels[level];\r\n        }\r\n    }\r\n\r\n    formatMessage(level, message, data = null) {\r\n        const timestamp = new Date().toISOString();\r\n        const logEntry = {\r\n            timestamp,\r\n            level,\r\n            message,\r\n            data,\r\n            component: this.getCallerInfo()\r\n        };\r\n        return logEntry;\r\n    }\r\n\r\n    getCallerInfo() {\r\n        const stack = new Error().stack;\r\n        const lines = stack.split('\\n');\r\n        // Skip the first 3 lines (Error, Logger method, calling method)\r\n        const callerLine = lines[3] || '';\r\n        const match = callerLine.match(/at\\s+(.+?)\\s+\\((.+?):(\\d+):(\\d+)\\)/);\r\n        if (match) {\r\n            return {\r\n                function: match[1],\r\n                file: match[2].split('/').pop(),\r\n                line: match[3],\r\n                column: match[4]\r\n            };\r\n        }\r\n        return { function: 'unknown', file: 'unknown', line: 'unknown', column: 'unknown' };\r\n    }\r\n\r\n    log(level, message, data = null) {\r\n        if (this.logLevels[level] <= this.currentLevel) {\r\n            const logEntry = this.formatMessage(level, message, data);\r\n            this.logs.push(logEntry);\r\n            \r\n            // Console output for development\r\n            const consoleMessage = `[${level}] ${message}`;\r\n            switch (level) {\r\n                case 'ERROR':\r\n                    console.error(consoleMessage, data);\r\n                    break;\r\n                case 'WARN':\r\n                    console.warn(consoleMessage, data);\r\n                    break;\r\n                case 'INFO':\r\n                    console.info(consoleMessage, data);\r\n                    break;\r\n                case 'DEBUG':\r\n                    console.debug(consoleMessage, data);\r\n                    break;\r\n                default:\r\n                    console.log(consoleMessage, data);\r\n            }\r\n        }\r\n    }\r\n\r\n    error(message, data = null) {\r\n        this.log('ERROR', message, data);\r\n    }\r\n\r\n    warn(message, data = null) {\r\n        this.log('WARN', message, data);\r\n    }\r\n\r\n    info(message, data = null) {\r\n        this.log('INFO', message, data);\r\n    }\r\n\r\n    debug(message, data = null) {\r\n        this.log('DEBUG', message, data);\r\n    }\r\n\r\n    getLogs(level = null, limit = null) {\r\n        let filteredLogs = this.logs;\r\n        \r\n        if (level) {\r\n            filteredLogs = this.logs.filter(log => log.level === level);\r\n        }\r\n        \r\n        if (limit) {\r\n            filteredLogs = filteredLogs.slice(-limit);\r\n        }\r\n        \r\n        return filteredLogs;\r\n    }\r\n\r\n    clearLogs() {\r\n        this.logs = [];\r\n    }\r\n\r\n    exportLogs() {\r\n        return JSON.stringify(this.logs, null, 2);\r\n    }\r\n\r\n    // Performance logging\r\n    time(label) {\r\n        console.time(label);\r\n        this.info(`Timer started: ${label}`);\r\n    }\r\n\r\n    timeEnd(label) {\r\n        console.timeEnd(label);\r\n        this.info(`Timer ended: ${label}`);\r\n    }\r\n\r\n    // User action logging\r\n    logUserAction(action, details = {}) {\r\n        this.info(`User Action: ${action}`, {\r\n            action,\r\n            details,\r\n            timestamp: new Date().toISOString(),\r\n            userAgent: navigator.userAgent\r\n        });\r\n    }\r\n\r\n    // API call logging\r\n    logApiCall(method, url, status, responseTime = null) {\r\n        this.info(`API Call: ${method} ${url}`, {\r\n            method,\r\n            url,\r\n            status,\r\n            responseTime,\r\n            timestamp: new Date().toISOString()\r\n        });\r\n    }\r\n\r\n    // URL shortening specific logging\r\n    logUrlShortened(originalUrl, shortCode, validityMinutes) {\r\n        this.info(`URL Shortened`, {\r\n            originalUrl,\r\n            shortCode,\r\n            validityMinutes,\r\n            timestamp: new Date().toISOString()\r\n        });\r\n    }\r\n\r\n    logUrlAccessed(shortCode, originalUrl, success) {\r\n        this.info(`URL Accessed`, {\r\n            shortCode,\r\n            originalUrl,\r\n            success,\r\n            timestamp: new Date().toISOString()\r\n        });\r\n    }\r\n\r\n    logUrlExpired(shortCode, originalUrl) {\r\n        this.warn(`URL Expired`, {\r\n            shortCode,\r\n            originalUrl,\r\n            timestamp: new Date().toISOString()\r\n        });\r\n    }\r\n}\r\n\r\n// Create and export a singleton instance\r\nconst logger = new Logger();\r\n\r\nexport default logger; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}